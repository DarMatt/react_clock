{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","setInterval","setState","prevProps","name","this","props","console","log","toLocaleTimeString","React","Component","App","isClockVisible","clockName","Math","ceil","random","showClock","hideClock","randomSetName","visible","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA2CeA,E,4MAvCbC,MAAQ,CACNC,KAAM,IAAIC,M,kEAGS,IAAD,OAClBC,aAAY,WACV,EAAKC,SAAS,CAAEH,KAAM,IAAIC,SACzB,O,yCAGcG,GACbA,EAAUC,OAASC,KAAKC,MAAMF,MAEhCG,QAAQC,IAAI,wCACNL,EAAUC,KADJ,eACeC,KAAKC,MAAMF,S,+BAIhC,IACAL,EAASM,KAAKP,MAAdC,KACAK,EAASC,KAAKC,MAAdF,KAER,OAEE,8CAEG,IACAL,EAAKU,qBACL,IACAL,O,GA9BWM,IAAMC,WCyEXC,G,kNAtEbd,MAAQ,CACNe,gBAAgB,EAChBC,UAAWC,KAAKC,KAAqB,IAAhBD,KAAKE,W,EAc5BC,UAAY,WACV,EAAKhB,SAAS,CACZW,gBAAgB,K,EAIpBM,UAAY,WACV,EAAKjB,SAAS,CACZW,gBAAgB,K,EAIpBO,cAAgB,WACd,EAAKlB,SAAS,CACZY,UAAWC,KAAKC,KAAqB,IAAhBD,KAAKE,a,kEAzBT,IAAD,OAClBhB,aAAY,WACV,IAAMF,EAAO,IAAIC,KAEb,EAAKF,MAAMe,gBAEbN,QAAQC,IAAIT,EAAKU,wBAElB,O,+BAsBH,IAAMY,EAAUhB,KAAKP,MAAMe,eACnBK,EAAwCb,KAAxCa,UAAWC,EAA6Bd,KAA7Bc,UAAWC,EAAkBf,KAAlBe,cAE9B,OACE,yBAAKE,UAAU,OACb,wBAAIA,UAAU,SAAd,eACA,2BACGD,GAAW,kBAAC,EAAD,CAAOjB,KAAMC,KAAKP,MAAMgB,aAEtC,4BACEQ,UAAU,mBACVC,KAAK,SACLC,QAASN,GAHX,cAOA,4BACEI,UAAU,mBACVC,KAAK,SACLC,QAASL,GAHX,cAOA,4BACEG,UAAU,kBACVC,KAAK,SACLC,QAASJ,GAHX,wB,GA3DUV,IAAMC,YCDxBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d85b973e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from `\n       + `${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n\n      <span>\n        Current time:\n        {' '}\n        {date.toLocaleTimeString()}\n        {' '}\n        {name}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.ceil(Math.random() * 100),\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      const date = new Date();\n\n      if (this.state.isClockVisible) {\n        // eslint-disable-next-line\n        console.log(date.toLocaleTimeString());\n      }\n    }, 1000);\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  randomSetName = () => {\n    this.setState({\n      clockName: Math.ceil(Math.random() * 100),\n    });\n  };\n\n  render() {\n    const visible = this.state.isClockVisible;\n    const { showClock, hideClock, randomSetName } = this;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"title\">React clock</h1>\n        <p>\n          {visible && <Clock name={this.state.clockName} />}\n        </p>\n        <button\n          className=\"clock show-clock\"\n          type=\"button\"\n          onClick={showClock}\n        >\n          Show clock\n        </button>\n        <button\n          className=\"clock hide-clock\"\n          type=\"button\"\n          onClick={hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          className=\"clock set-clock\"\n          type=\"button\"\n          onClick={randomSetName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}